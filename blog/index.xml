<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Blog on KBSIs' Blog</title><link>https://idichi.tk/blog/</link><description>Recent content in Blog on KBSIs' Blog</description><generator>Hugo -- gohugo.io</generator><language>jp</language><lastBuildDate>Fri, 31 Mar 2023 11:03:05 +0900</lastBuildDate><atom:link href="https://idichi.tk/blog/index.xml" rel="self" type="application/rss+xml"/><item><title>卒業研究内容を学会で発表した</title><link>https://idichi.tk/blog/research-chromacolor-line/</link><pubDate>Fri, 31 Mar 2023 11:03:05 +0900</pubDate><guid>https://idichi.tk/blog/research-chromacolor-line/</guid><description>はじめての学会発表 大学4年の卒業研究内容をIEICE(電子情報通信学会)にて，発表しました． 題目は，ChromaticityLineとCol</description></item><item><title> ハッカソンで再び企業賞を獲得した話</title><link>https://idichi.tk/blog/hackathon/</link><pubDate>Sun, 10 Oct 2021 16:16:05 +0900</pubDate><guid>https://idichi.tk/blog/hackathon/</guid><description>ハッカソンで再び賞を獲得 ハッカソンとはITのモノづくり大会のことで，今回出場した大会名はCCC2021である．結果，最終選考まで勝ち残り、企</description></item><item><title> JavaScriptにおけるCookieの取り扱い方</title><link>https://idichi.tk/blog/js-cookie/</link><pubDate>Fri, 16 Apr 2021 21:16:05 +0900</pubDate><guid>https://idichi.tk/blog/js-cookie/</guid><description>JavaScriptにおけるCookieの取り扱い方 //読み込み c=document.cookie console.log(c) // cookieが表示される //書き込み /*構造：Name=value;a</description></item><item><title>高校三年生のときに研究してました</title><link>https://idichi.tk/blog/highschool-study/</link><pubDate>Sat, 10 Apr 2021 21:16:05 +0900</pubDate><guid>https://idichi.tk/blog/highschool-study/</guid><description>高校三年時の研究成果 詳しくは，AboutMeを見てほしいですが，中学生からもともとAIに興味がありました．
高校三年時に進級した際に本格的にAIを学ぼうと思い，ディープラーニングの基礎であるニューラルネットワークを勉強，研究したところ，ニューラルネットワークの高速化手法を開発し，SSH研究発表（文部科学省主催）という高校生が大学教授の前で自らの研究発表を行う会に選ばれ，発表を行いました．
ちなみに，SSHとはSuper Science Highschoolのことで母校はこれの指定を受けておりました．
単独研究で発表まで至ったのは母校で私がはじめてです．
これは，在校生徒と招待校あわせ，1000人の前で登壇しました． なお，これらの研究成果は文部科学省に提出しています．（疑義がある方は私の母校へ問い合わせるか，文部科学省に問い合わせてください．）
基礎研究と応用研究 基礎研究は，ニューラルネットワークの高速化です． これは主に一般にいう，プルーニングです． 応用研究は，ニューラルネットワークを応用した歌声から曲を検索するシステムです． フーリエ変換を行い，音階を求め，それをデータとしたシステムです． 今ならもっといいアーキテクチャが思い浮かびます． 研究のスライドはYoutubeに公開しています． 基礎研究編です．
応用研究編です．
余談 この記事を書くには今更すぎますが（執筆時は登壇から3年が経過），インターン面接などでこの件について深堀されるので，記事にまとめました．</description></item><item><title>Cyber Agentのインターンに参加した話(体験編)</title><link>https://idichi.tk/blog/cyberintern202103/</link><pubDate>Sun, 14 Mar 2021 21:16:05 +0900</pubDate><guid>https://idichi.tk/blog/cyberintern202103/</guid><description>CyberAgentのインターンに参加した話． こんにちは． 大学2年 伊地知（いぢち）です． 先日 CyberAgentの3weeks インターン （サ</description></item><item><title>【調査中】ArcFaceなどのメトリックラーニング</title><link>https://idichi.tk/blog/servay-arcface/</link><pubDate>Thu, 17 Dec 2020 15:16:05 +0900</pubDate><guid>https://idichi.tk/blog/servay-arcface/</guid><description>ArcFaceって ArcFaceは顔認証を行えるメトリックラーニングの構造のこと．
ArcFaceは入力されたデータに対して，一人の画像に対するユニークな特徴ベクトルを算出する．
例えばA,B,C,&amp;hellip; という人物の画像が一人に対して，複数毎あったとする． Aの画像が入力されたときArcFaceはY_Aのベクトルを算出するよう学習する． 一方，Bの画像が入力されたときもY_Bを算出する.
これにより，未知の人物の画像が入力されたときも，人物ごとにユニークなベクトルを算出することによって，
ベクトル間のCos類似度を求めることにより，同一人物かを判定することが可能になる．
元論文のarXiv
インストール 論文の著者が実装と学習済みの重みを公開している．
Mxnetというフレームワークだが，ArcFaceを使うだけなら何も気にすることはない．
実行には
$ pip3 install mxnet==1.6.0 が必要である． ただし，GPU環境の場合，cuda==10.2をインストールし，
$ pip3 install mxnet-cu102==1.6.0 を実行する．
あとは，
$ pip3 install -U insightface でインストールは完了．
試す 基本的には，チュートリアルを参考にライブラリを読み解いていく．
自分でも，少し試したので，jupyter notebookを貼っておく．
不明点 論文や解説記事を読んでArcFaceの学習方法は理解したものの，肝心の顔認証データセットの目的変数がわからない．具体的には，ユニークなIDをどうやって，つけているのか．論文中に各データセットの示された人物の数は一定でないから．
[追記] 論文をよく見ると，参考文献として， [32] Y. Sun, Y. Chen, X. Wang, and X. Tang. Deep learning face representation by joint identification-verification. In NIPS, 2014. が載っていた． これによるとDeepIDを用いて特徴ベクトルを決定するとある． DeepIDについては，解説記事を発見した． 参考記事
これを用いてDeepIDをつけているのか納得．なお，参考記事はDeepID 1について解説されているが，参考文献はDeepID2について説明されている． おおむねは同じだが，違いは，顔のパーツ位置（face landmark）による畳み込み前の整列や特徴ベクトルを200次元まで拡張した，ネットワークを深くしたなどの違いがある．（詳しく論文見てないけど）
結論 参考文献を読もう．</description></item><item><title>K近傍法をスクラッチ実装してみる</title><link>https://idichi.tk/blog/knn/</link><pubDate>Tue, 15 Dec 2020 15:16:05 +0900</pubDate><guid>https://idichi.tk/blog/knn/</guid><description>k近傍法とはなにか クラス分類の機械学習の一種のアルゴリズムのこと．
k近傍法は学習させるデータ（クラス属性含めて）一つ一つに対して入力データとの類似度（距離）を求め，類似度が高いデータのクラスを入力データのクラスとする．
手順は
すべてのデータに対して類似度を求め，高いものから順にk個データを選ぶ． それらのデータのクラスを多数決で決定し，そのクラスとする． なお，距離はユークリッド距離でもよいし，マハラノビス距離でもよい（らしい）
kの値は，線形探索や，交差検証などによって，決定する．（ハイパラメータなので）
スクラッチ実装 上記手順を見ればまったく難しくなさそうなので，簡単に実装してみる．
import numpy as np ## データとクラス（属性）の構造体替わり class Data: def __init__(self,vec:np.array,spector:str) -&amp;gt; None: self.vec=vec self.spec=spector ## 学習データ A=np.random.randint(0,100,(10)) B=np.random.randint(0,100,(10)) C=np.random.randint(0,100,(10)) D=np.random.randint(0,100,(10)) E=np.random.randint(0,100,(10)) VectorsArray=[Data(A,&amp;#39;A&amp;#39;),Data(B,&amp;#39;B&amp;#39;),Data(C,&amp;#39;A&amp;#39;),Data(D,&amp;#39;B&amp;#39;),Data(E,&amp;#39;A&amp;#39;)] ## 類似度（ユークリッド距離）を求める関数 def getDistance(vec:np.array,vec2:np.array): r=np.linalg.norm(vec-vec2,ord=2) return r &amp;#39;&amp;#39;&amp;#39; - K近傍法メインルーチン 引数 vec:入力データ(np.array) VectorsArray:Data構造体のリスト k : 整数 返却値 {str(クラス):count(クラスの数)...} 利用時は,max関数でkeyを指定する． 詳細は__main__()で &amp;#39;&amp;#39;&amp;#39; def getNearVecSpec(vec:np.array,VectorsArray=VectorsArray,k=3) : distance=[] for v in VectorsArray: d=getDistance(vec,v.vec) distance.append((v.spec,d)) distance.sort(key=lambda X: X[1]) print(distance) diss={} for i in range(k): v=distance[i] spec=v[0] if spec in diss: diss[spec]+=1 else: diss[spec]=1 return diss if __name__ == &amp;#34;__main__&amp;#34;: a=np.</description></item><item><title>企業賞とオーディエンス賞GETした</title><link>https://idichi.tk/blog/ccc-winner/</link><pubDate>Sun, 25 Oct 2020 21:16:05 +0900</pubDate><guid>https://idichi.tk/blog/ccc-winner/</guid><description>ハッカソンで初めて賞を獲得 ハッカソンとはITのモノづくり大会のことであるが、今回、最終選考まで勝ち残り、企業賞とオーディエンス賞を獲得した。</description></item><item><title>&lt;AI開発 part2>転移学習によるCNNの学習</title><link>https://idichi.tk/blog/losemicrosoft/</link><pubDate>Sun, 31 May 2020 19:39:13 +0900</pubDate><guid>https://idichi.tk/blog/losemicrosoft/</guid><description>なぜつくるのか 日本人に最適化された年齢と性別認識モデルはかなり少なく，たいていは有料またはアジア人全般の顔で学習されたモデルといった汎用的な</description></item><item><title>サークルを作った話。</title><link>https://idichi.tk/blog/newcircle/</link><pubDate>Sun, 31 May 2020 19:16:51 +0900</pubDate><guid>https://idichi.tk/blog/newcircle/</guid><description>目的 目的は金稼ぎとコミュニティをつくること。これは、１回生のころ、ディープラーニングを学ぶにあたって、一人ではなかなか、はかどらず、周りに訊</description></item><item><title>＜AI開発 part 1＞日本人のタレントの顔画像と年齢のデータを集める</title><link>https://idichi.tk/blog/20200225/</link><pubDate>Tue, 25 Feb 2020 21:16:05 +0900</pubDate><guid>https://idichi.tk/blog/20200225/</guid><description>＜追記＞ 著作権については、研究開発目的であり、許諾なしで利用可能である。 詳しくはリンクで確認してほしい。(https://storialaw</description></item><item><title>「ieServer」のIPアドレス更新スクリプトを作った</title><link>https://idichi.tk/blog/20200201/</link><pubDate>Sat, 01 Feb 2020 21:16:05 +0900</pubDate><guid>https://idichi.tk/blog/20200201/</guid><description>タイトル通り 実家でRaspberry Piをサーバにしている。 グローバルIPは動的なので、DDNSなどのサービスで固定し対策する必要がある。 そ</description></item><item><title>AIで宝くじを当てる！（今すぐ試せるソースコード付き！！）</title><link>https://idichi.tk/blog/20200119/</link><pubDate>Sun, 19 Jan 2020 21:16:05 +0900</pubDate><guid>https://idichi.tk/blog/20200119/</guid><description>ディープラーニングで宝くじ（ロト６） ロト６は１～４３の番号を6個選ぶ、くじのことである。 AIに入力するデータは、以前のあたり番号を入力にして</description></item><item><title>【文系理系必見】仕事を奪う「AI」を4分で解説</title><link>https://idichi.tk/blog/advent-hack/</link><pubDate>Sun, 22 Dec 2019 15:16:05 +0900</pubDate><guid>https://idichi.tk/blog/advent-hack/</guid><description>ディープラーニングの基礎を4分で解説 本記事は大阪工業大学アドベントカレンダー 12/22枠に投稿するために書かれたものです．詳しくは最後に．
短い自己紹介 名前は伊地知翔也と言います．高校時代からニューラルネットワークを研究し，高速化手法を開発，SSH研究発表に招待され研究成果を発表しました! 詳しくはこちら
ほんとに足し算と掛け算だけ？ AIが仕事を奪うという流行り言葉はすでに沢山の人が聞いたことがあると思う．しかし，肝心の仕組みはまったく知らない人が多いと感じる．
例えば，AIアシスタント などの仕組みしろうと思えば，深い数学知識が必要になるが，AIのそもそもの原理はいたって単純だ．原理から出発すれば，意外と簡単なことに気づくと思う．
では，4分タイマースタート！！ 判断を代替するAIを考える ここでは焼肉に誘われたときの判断をAIにさせることを考える．
判断するのに必要な要素 まず，焼肉に誘われたら何を考えるだろうか？
お店の質
お店の値段
友好度(誘ってきたメンツ)
&amp;hellip;
など，さまざまな情報の中から判断する．
また，その中の情報でも，人によって，どれを優先するかも異なる．
（値段を重要視する人もいれば，メンツを重要視する人もいる．） これらを合計して，ある一定の値になれば誘いを受ける（行く）のではないだろうか． これらを数式で落とし込んでみる．
まず，判断の元となる情報(条件)を $$
\begin{align} &amp;amp;x_1 \quad(焼肉のお店の質)\\\ &amp;amp;x_2 \quad(お店の値段)\\\ &amp;amp;x_3 \quad(友好度)\\\ &amp;amp;&amp;hellip; \quad(他の条件)\\\ &amp;amp;x_n \quad(条件はn個ある) \end{align} $$
次に優先度（ここから重みと呼ぶことにする）を $$ \begin{align} &amp;amp;w_1\quad (お店の質を重要視する度合い) \\\ &amp;amp;w_2\quad (お店の値段を重要視する度合い) \\\ &amp;amp;w_3 \quad (誘ってきたメンツを重要視する度合い) \\\ &amp;amp;&amp;hellip;\quad (他の条件を重要視する度合い) \\\ &amp;amp;w_n \quad (n個目の条件を重要視する度合い) \\\ \end{align} $$
とする．これをかけて足した値(yとする)が判断の値となるので， $$ y=(x_1 \times w_1) + (x_2 \times w_2) + (x_3 \times w_3) +&amp;hellip;+(x_n \times w_n) $$ 判断の値一定以上(θとする)になるとき，行く（誘いを受ける）ので，行く時を1 行かない時を0とする． 活性化関数と呼ぶが本記事では名前は気にしなくていい:） $$ \begin{eqnarray} 行く(1)行かない(0) = \begin{cases} 1 &amp;amp; ( y \geqq θ ) \quad yがθ(基準)以上なら行く \\\ 0 &amp;amp; ( y &amp;lt; θ ) \quad yがθ(基準)を下回ったら行かない \end{cases} \end{eqnarray} $$</description></item><item><title>Jetson NanoにDarknetをインストールする方法</title><link>https://idichi.tk/blog/jetson-darknet/</link><pubDate>Thu, 19 Dec 2019 21:16:05 +0900</pubDate><guid>https://idichi.tk/blog/jetson-darknet/</guid><description>what&amp;rsquo;s darknet? Darknetとは物体認識系ディープラーニングモデルの一つYoloのC言語実装のこと． ここで，簡単に経緯を話すと，現在，私はロボカッププ</description></item><item><title>ブログの国際化対応を行った.</title><link>https://idichi.tk/blog/english/</link><pubDate>Thu, 19 Dec 2019 15:16:05 +0900</pubDate><guid>https://idichi.tk/blog/english/</guid><description>英語圏、中国語圏からのアクセス このブログの半数は中国，アメリカ アクセス履歴によれば，IPアドレスは半数がアメリカ，中国経由からアクセスされて</description></item><item><title>【雑談】動画の紹介</title><link>https://idichi.tk/blog/goodmovie/</link><pubDate>Sat, 30 Nov 2019 15:16:05 +0900</pubDate><guid>https://idichi.tk/blog/goodmovie/</guid><description>MMD zero杯での動画 まず見ていただきたいのはこの動画． 【MMD杯ZERO2】 PLAY TIME! 【けものフレンズ】 まあ，けものフレンズの二次創作なのだが，非</description></item><item><title>Posenet-Pythonを使いやすく改良した．</title><link>https://idichi.tk/blog/posenet/</link><pubDate>Sat, 09 Nov 2019 23:43:08 +0900</pubDate><guid>https://idichi.tk/blog/posenet/</guid><description>PoseNet-Python改良してみた． What&amp;rsquo;s PoseNet ? Posenetは画像，ビデオから人の関節位置や目の位置などを座標形式で出してくれる．ディープ</description></item><item><title>ハッカソンに出場した話</title><link>https://idichi.tk/blog/hackson/</link><pubDate>Wed, 06 Nov 2019 20:05:43 +0900</pubDate><guid>https://idichi.tk/blog/hackson/</guid><description>ハッカソンに出場した話． なんで？ 以前，東京渋谷で開催のBITVALLAYというイベントに参加した際，IT企業の方と知り合った. BITVALL</description></item><item><title>ブログ設置完了．</title><link>https://idichi.tk/blog/start/</link><pubDate>Tue, 05 Nov 2019 14:16:00 +0900</pubDate><guid>https://idichi.tk/blog/start/</guid><description>ブログの設置が完了 以前，はてなブログを運用していたが，三日坊主でやめてしまったために，今度こそはと思い，作ってみた.(バイトの面接とか就活の</description></item></channel></rss>